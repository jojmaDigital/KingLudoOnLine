---
import type { GetStaticPaths } from "astro";
const { siteName = "Ludo King Online" } = Astro.props;
import { getLangStaticPaths, resolveLang } from "../lib/i18n";

export async function getStaticPaths() {
  return getLangStaticPaths();
}

const locale = resolveLang(Astro.params.lang);
const dict = await import(`../locales/${locale}.json`).then((m) => m.default);
const navDict = dict?.nav || {};
---

<nav class="w-full fixed top-0 left-0 z-50 bg-secondary flex items-center justify-between text-primary px-6 py-4 shadow-lg" lang={locale}>
  <!-- Logo -->
  <a href={`/${locale}/`} class="flex items-center gap-2">
    <img src="/freecell.png" alt={`${siteName} logo`} class="w-20 h-15" />
  </a>
  
  <!-- Hamburger -->
  <button id="hamburger-btn" 
          class="flex flex-col justify-center items-center w-8 h-8 space-y-1 focus:outline-none transition-transform duration-300"
          aria-label="Toggle navigation menu" aria-expanded="false" aria-controls="nav-dropdown">
    <span class="block w-6 h-0.5 bg-primary rounded"></span>
    <span class="block w-6 h-0.5 bg-primary rounded"></span>
    <span class="block w-6 h-0.5 bg-primary rounded"></span>
  </button>
  
  <!-- Dropdown -->
  <ul id="nav-dropdown" 
      class="hidden absolute top-full right-6 mt-4 w-56 bg-secondary text-primary rounded-xl shadow-2xl overflow-hidden transform opacity-0 scale-95 transition-all duration-300 ease-out"
      role="menu" aria-labelledby="hamburger-btn">
    <li><a href={`/${locale}/`} class="block px-5 py-3 hover:bg-secondary hover:text-primary transition-colors" role="menuitem">{navDict.home || "Home"}</a></li>
    <li class="border-t border-secondary"><a href={`/${locale}/about/`} class="block px-5 py-3 hover:bg-secondary hover:text-primary transition-colors" role="menuitem">{navDict.about || "About"}</a></li>
    <li class="border-t border-secondary"><a href={`/${locale}/privacy-policy/`} class="block px-5 py-3 hover:bg-secondary hover:text-primary transition-colors" role="menuitem">{navDict.privacy || "Privacy Policy"}</a></li>
    <li class="border-t border-secondary"><a href={`/${locale}/terms-of-service/`} class="block px-5 py-3 hover:bg-secondary hover:text-primary transition-colors" role="menuitem">{navDict.terms || "Terms of Service"}</a></li>
  </ul>
</nav>

<script is:inline>
  const hamburgerBtn = document.getElementById('hamburger-btn');
  const navDropdown = document.getElementById('nav-dropdown');

  function openMenu() {
    navDropdown.classList.remove('hidden');
    setTimeout(() => {
      navDropdown.classList.remove('opacity-0', 'scale-95');
      navDropdown.classList.add('opacity-100', 'scale-100');
    }, 10);
    hamburgerBtn.setAttribute('aria-expanded', 'true');
  }

  function closeMenu() {
    navDropdown.classList.add('opacity-0', 'scale-95');
    setTimeout(() => navDropdown.classList.add('hidden'), 200);
    hamburgerBtn.setAttribute('aria-expanded', 'false');
  }

  hamburgerBtn.addEventListener('click', (e) => {
    e.stopPropagation(); // empÃªcher fermeture instantanÃ©e
    const isHidden = navDropdown.classList.contains('hidden');
    if (isHidden) openMenu();
    else closeMenu();
  });

  // ðŸ‘‰ Fermer si on clique ailleurs dans la page
  document.addEventListener('click', (e) => {
    if (!navDropdown.contains(e.target) && !hamburgerBtn.contains(e.target)) {
      if (!navDropdown.classList.contains('hidden')) {
        closeMenu();
      }
    }
  });
</script>

<style>
  body {
    padding-top: 56px; /* Ã©vite que le contenu passe sous la nav */
  }
</style>
