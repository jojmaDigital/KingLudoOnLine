---
const { path = "https://games-dun-one.vercel.app/KingLudo/index.html" } = Astro.props;
---

<div id="game-container" class="w-full max-w-5xl bg-gray-100 flex items-center justify-center border rounded-lg shadow-md mt-10 mx-auto relative">
  <h1 id="ludo-king-title" class="sr-only">Ludo King Game</h1>
  <!-- Fullscreen Toggle Button -->
  <button
    id="fullscreen-btn"
    class="absolute top-4 right-4 z-10 bg-white hover:bg-gray-50 border border-gray-300 rounded-lg p-2 shadow-md transition-all duration-200 hover:shadow-lg"
    aria-label="Toggle fullscreen"
    title="Toggle fullscreen"
  >
    <!-- Expand Icon (Enter Fullscreen) - Heroicons ArrowsPointingOut -->
    <svg id="expand-icon" class="w-6 h-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
      <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 9V4.5H8.25M20.25 9V4.5H15.75M3.75 15v4.5H8.25M20.25 15v4.5H15.75" />
    </svg>
    <!-- Compress Icon (Exit Fullscreen) - Heroicons ArrowsPointingIn -->
    <svg id="compress-icon" class="w-6 h-6 text-gray-700 hidden" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
      <path stroke-linecap="round" stroke-linejoin="round" d="M9 9L4.5 4.5M9 9H4.5M9 9V4.5M15 9l4.5-4.5M15 9h4.5M15 9V4.5M9 15l-4.5 4.5M9 15H4.5M9 15v4.5M15 15l4.5 4.5M15 15h4.5M15 15v4.5" />
    </svg>
  </button>

  <iframe
    id="game-object"
    src={path}
    title="Ludo King Game"
    aria-label="Embedded Ludo King game"
    aria-labelledby="ludo-king-title"
    class="w-full h-[80vh] rounded-lg transition-all duration-300"
  ></iframe>
</div>

<script>
  class FullscreenManager {
    gameContainer;
    gameObject;
    fullscreenBtn;
    expandIcon;
    compressIcon;
    isFullscreen;

    constructor() {
      this.gameContainer = document.getElementById('game-container');
      this.gameObject = document.getElementById('game-object');
      this.fullscreenBtn = document.getElementById('fullscreen-btn');
      this.expandIcon = document.getElementById('expand-icon');
      this.compressIcon = document.getElementById('compress-icon');
      this.isFullscreen = false;

      this.init();
    }

    init() {
      if (this.fullscreenBtn) {
        this.fullscreenBtn.addEventListener('click', () => this.toggleFullscreen());
      }

      // Listen for fullscreen change events (with vendor prefixes)
      document.addEventListener('fullscreenchange', () => this.handleFullscreenChange());
      (document as any).addEventListener?.('webkitfullscreenchange', () => this.handleFullscreenChange());
      (document as any).addEventListener?.('mozfullscreenchange', () => this.handleFullscreenChange());
      (document as any).addEventListener?.('MSFullscreenChange', () => this.handleFullscreenChange());
    }

    toggleFullscreen() {
      if (!this.isFullscreen) {
        this.enterFullscreen();
      } else {
        this.exitFullscreen();
      }
    }

    enterFullscreen() {
      const container = this.gameContainer;

      if (!container) return;

      if (container.requestFullscreen) {
        container.requestFullscreen();
      } else {
        const anyContainer = container as any;
        if (anyContainer.webkitRequestFullscreen) {
          anyContainer.webkitRequestFullscreen();
        } else if (anyContainer.mozRequestFullScreen) {
          anyContainer.mozRequestFullScreen();
        } else if (anyContainer.msRequestFullscreen) {
          anyContainer.msRequestFullscreen();
        }
      }
    }

    exitFullscreen() {
      if (document.exitFullscreen) {
        document.exitFullscreen();
      } else {
        const anyDoc = document as any;
        if (anyDoc.webkitExitFullscreen) {
          anyDoc.webkitExitFullscreen();
        } else if (anyDoc.mozCancelFullScreen) {
          anyDoc.mozCancelFullScreen();
        } else if (anyDoc.msExitFullscreen) {
          anyDoc.msExitFullscreen();
        }
      }
    }

    handleFullscreenChange() {
      const anyDoc = document as any;
      this.isFullscreen = !!(
        document.fullscreenElement ||
        anyDoc.webkitFullscreenElement ||
        anyDoc.mozFullScreenElement ||
        anyDoc.msFullscreenElement
      );

      this.updateUI();
      this.updateGameSize();
    }

    updateUI() {
      if (this.isFullscreen) {
        this.expandIcon?.classList.add('hidden');
        this.compressIcon?.classList.remove('hidden');
        this.fullscreenBtn?.setAttribute('title', 'Exit fullscreen');
        this.fullscreenBtn?.setAttribute('aria-label', 'Exit fullscreen');
      } else {
        this.expandIcon?.classList.remove('hidden');
        this.compressIcon?.classList.add('hidden');
        this.fullscreenBtn?.setAttribute('title', 'Enter fullscreen');
        this.fullscreenBtn?.setAttribute('aria-label', 'Enter fullscreen');
      }
    }

    updateGameSize() {
      if (this.gameObject && this.gameContainer) {
        if (this.isFullscreen) {
          // In fullscreen, make the game take full height
          this.gameObject.classList.remove('h-[80vh]');
          this.gameObject.classList.add('h-screen');
          this.gameContainer.classList.remove('mt-10', 'rounded-lg', 'max-w-5xl', 'mx-auto');
          this.gameContainer.classList.add('fixed', 'inset-0', 'z-50', 'bg-gray-100');
        } else {
          // Exit fullscreen, restore normal size
          this.gameObject.classList.remove('h-screen');
          this.gameObject.classList.add('h-[80vh]');
          this.gameContainer.classList.add('mt-10', 'rounded-lg', 'max-w-5xl', 'mx-auto');
          this.gameContainer.classList.remove('fixed', 'inset-0', 'z-50', 'bg-gray-100');
        }
      }
    }
  }

  // Initialize fullscreen manager when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new FullscreenManager();
  });
</script>

<style>
  /* Additional styles for fullscreen mode */
  .fixed.inset-0.z-50 {
    border-radius: 0 !important;
    box-shadow: none !important;
  }

  /* Ensure button is always visible and clickable */
  #fullscreen-btn {
    pointer-events: auto;
    cursor: pointer;
  }

  #fullscreen-btn:hover {
    transform: scale(1.05);
  }

  #fullscreen-btn:active {
    transform: scale(0.95);
  }
</style>
